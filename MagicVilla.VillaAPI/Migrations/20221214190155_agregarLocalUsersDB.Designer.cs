// <auto-generated />
using System;
using MagicVilla.VillaAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagicVilla.VillaAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221214190155_agregarLocalUsersDB")]
    partial class agregarLocalUsersDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MagicVilla.VillaAPI.Models.LocalUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LocalUser");
                });

            modelBuilder.Entity("MagicVilla.VillaAPI.Models.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Comodidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificada")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Villa");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacidad = 5,
                            Comodidad = "",
                            Descripcion = "Combina el aspecto hogareño y acogedor de una cabaña con los lujos más extravagantes que puedas imaginar.",
                            FechaCreacion = new DateTime(2022, 12, 14, 13, 1, 54, 994, DateTimeKind.Local).AddTicks(6493),
                            ImagenUrl = "https://www.mexicodesconocido.com.mx/wp-content/uploads/2019/08/cabanas-jalisco-portada.jpg",
                            Nombre = "Villa Imperial",
                            Precio = 2500.0,
                            Ubicacion = "Puebla, Puebla."
                        },
                        new
                        {
                            Id = 2,
                            Capacidad = 6,
                            Comodidad = "",
                            Descripcion = "Hermosa Cabaña con vista a un lago espectacular, ideal para desconectarte y descansar.",
                            FechaCreacion = new DateTime(2022, 12, 14, 13, 1, 54, 994, DateTimeKind.Local).AddTicks(6549),
                            ImagenUrl = "https://q-xx.bstatic.com/xdata/images/hotel/840x460/297598963.jpg?k=c1e6c336fa88d15beb052eeb41a81065557876f820c8e21b7a328d14e00085fa&o=",
                            Nombre = "Villa Premium",
                            Precio = 3000.0,
                            Ubicacion = "Atlixco, Puebla."
                        },
                        new
                        {
                            Id = 3,
                            Capacidad = 6,
                            Comodidad = "",
                            Descripcion = "Hermosa Cabaña con alberca privada, tinas de hidromasaje para relajarte después de un día de playa, cómoda terraza para cenar en familia frente al mar, y todo con una vista privilegiada.",
                            FechaCreacion = new DateTime(2022, 12, 14, 13, 1, 54, 994, DateTimeKind.Local).AddTicks(6556),
                            ImagenUrl = "https://www.dondeir.com/wp-content/uploads/2017/01/cabanas-sobre-el-agua-a.jpg",
                            Nombre = "Villa VIP",
                            Precio = 4500.0,
                            Ubicacion = "Veracruz, Mexico."
                        });
                });

            modelBuilder.Entity("MagicVilla.VillaAPI.Models.VillaNumber", b =>
                {
                    b.Property<int>("VillaNo")
                        .HasColumnType("int");

                    b.Property<string>("Detalles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("VillaId")
                        .HasColumnType("int");

                    b.HasKey("VillaNo");

                    b.HasIndex("VillaId");

                    b.ToTable("VillaNumber");
                });

            modelBuilder.Entity("MagicVilla.VillaAPI.Models.VillaNumber", b =>
                {
                    b.HasOne("MagicVilla.VillaAPI.Models.Villa", "Villa")
                        .WithMany()
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Villa");
                });
#pragma warning restore 612, 618
        }
    }
}
